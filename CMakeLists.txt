cmake_minimum_required(VERSION 3.0.0)
project(ofs VERSION 0.1.0)

set (CMAKE_POSITION_INDEPENDENT_CODE ON)
set (CMAKE_CXX_STANDARD 20)
set (CMAKE_CXX_STANDARD_REQUIRED YES)

if (CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)
    set(CMAKE_INSTALL_PREFIX "${CMAKE_BINARY_DIR}/bin" CACHE PATH "..." FORCE)
endif()

list (APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cmake/sdl2)

set(OFS_SOURCE_ROOT_DIR ${CMAKE_SOURCE_DIR})

set(OFS_BINARY_ROOT_DIR ${CMAKE_BINARY_DIR})
set(OFS_BINARY_MODULE_DIR ${OFS_BINARY_ROOT_DIR}/modules)
set(OFS_BINARY_STARTUP_DIR ${OFS_BINARY_MODULE_DIR}/startup)
set(OFS_BINARY_PLUGIN_DIR ${OFS_BINARY_MODULE_DIR}/plugin)

# path in relative to CMAKE_INSTALL_PREFIX
set(OFS_INSTALL_ROOT_DIR "ofs")
set(OFS_INSTALL_MODULE_DIR ${OFS_INSTALL_ROOT_DIR}/modules)
set(OFS_INSTALL_STARTUP_DIR ${OFS_INSTALL_MODULE_DIR}/startup)
set(OFS_INSTALL_PLUGIN_DIR ${OFS_INSTALL_MODULE_DIR}/plugin)

set(OFS_LIB $<TARGET_LINKER_FILE:ofs>)

set(EXTERN_DIR ${CMAKE_SOURCE_DIR}/externs)

# ImGUI libraries

set(IMGUI_LIBRARY_DIR "${CMAKE_SOURCE_DIR}/src/imgui")
set(IMGUI_INCLUDE_DIR "${IMGUI_LIBRARY_DIR}")

set(IMGUI_SOURCES
    "${IMGUI_LIBRARY_DIR}/imgui.cpp"
    "${IMGUI_LIBRARY_DIR}/imgui_demo.cpp"
    "${IMGUI_LIBRARY_DIR}/imgui_draw.cpp"
    "${IMGUI_LIBRARY_DIR}/imgui_tables.cpp"
    "${IMGUI_LIBRARY_DIR}/imgui_widgets.cpp"
)

set(IMGUI_HEADERS
    "${IMGUI_LIBRARY_DIR}/imgui.h"
)

add_library(imgui OBJECT
    ${IMGUI_SOURCES}
    ${IMGUI_HEADERS}
)

target_compile_definitions(imgui PRIVATE
    IMGUI_IMPL_OPENGL_LOADER_GLAD=1
)

target_include_directories(imgui PUBLIC
    "${IMGUI_INCLUDE_DIR}"
)

# end of ImGUI libraries

include_directories(src)
add_subdirectory(src)

set(CPACK_PROJECT_NAME ${PROJECT_NAME})
set(CPACK_PROJECT_VERSION ${PROJECT_VERSION})
